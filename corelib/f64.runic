#[primitive]
struct f64
  # INFINITY = 1_f64 / 0
  # MIN_NORMAL = 2.2250738585072014e-308_f64  # 2.0**-1022
  # MIN = 4.9e-324_f64                        # 2.0**-1074
  # MAX = 1.7976931348623157e308_f64          # (2.0 - 2**-52) * 2**1023
  # NaN = 0_f64 / 0
  # SIZE = 64

  #[primitive]
  def to_i8 : i8
  end

  #[primitive]
  def to_u8 : u8
  end

  #[primitive]
  def to_i16 : i16
  end

  #[primitive]
  def to_u16 : u16
  end

  #[primitive]
  def to_i32 : i32
  end

  #[primitive]
  def to_u32 : u32
  end

  #[primitive]
  def to_i64 : i64
  end

  #[primitive]
  def to_u64 : u64
  end

  #[primitive]
  #[feature(i128)]
  def to_i128 : i128
  end

  #[primitive]
  #[feature(i128)]
  def to_u128 : u128
  end

  #[primitive]
  def to_f32 : f32
  end

  def to_f64 : f64
    self
  end

  def to_i : i32
    self.to_i32
  end

  def to_u : u32
    self.to_u32
  end

  def to_f : f64
    self.to_f64
  end

  #[primitive]
  def +(other : f64) : f64
  end

  #[primitive]
  def -(other : f64) : f64
  end

  #[primitive]
  def *(other : f64) : f64
  end

  #[primitive]
  def /(other : f64) : f64
  end

  #[primitive]
  def //(other : f64) : f64
  end

  #[primitive]
  def %(other : f64) : f64
  end

  #[primitive]
  def **(other : f64) : f64
  end

  #[primitive]
  def ==(other : f64) : bool
  end

  #[primitive]
  def !=(other : f64) : bool
  end

  #[primitive]
  def <(other : f64) : bool
  end

  #[primitive]
  def <=(other : f64) : bool
  end

  #[primitive]
  def >(other : f64) : bool
  end

  #[primitive]
  def >=(other : f64) : bool
  end

  def <=>(other : f64) : i32
    if self < other
      -1
    else
      if self > other
        1
      else
        0
      end
    end
  end

  ##[primitive]
  #def - : f64
  #end

  ##[primitive]
  #def + : f64
  #end

  def ! : bool
    false
  end
end
