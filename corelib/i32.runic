#[primitive]
struct i32
  # MIN = -2147483648_i32
  # MAX = 2147483647_i32
  # SIZE = 32

  #[primitive]
  def to_i8 : i8
  end

  #[primitive]
  def to_u8 : u8
  end

  #[primitive]
  def to_i16 : i16
  end

  #[primitive]
  def to_u16 : u16
  end

  def to_i32 : i32
    self
  end

  #[primitive]
  def to_u32 : u32
  end

  #[primitive]
  def to_i64 : i64
  end

  #[primitive]
  def to_u64 : u64
  end

  #[primitive]
  #[feature(i128)]
  def to_i128 : i128
  end

  #[primitive]
  #[feature(i128)]
  def to_u128 : u128
  end

  #[primitive]
  def to_f32 : f32
  end

  #[primitive]
  def to_f64 : f64
  end

  def to_i : i32
    self.to_i32
  end

  def to_u : u32
    self.to_u32
  end

  def to_f : f64
    self.to_f64
  end

  #[primitive]
  def +(other : i32) : i32
  end

  #[primitive]
  def -(other : i32) : i32
  end

  #[primitive]
  def *(other : i32) : i32
  end

  #[primitive]
  def div(other : i32) : i32
  end

  #[primitive]
  def %(other : i32) : i32
  end

  def /(other : i32) : float
    self.to_f / other.to_f
  end

  def abs : i32
    if self < 0_i32
      -self
    else
      self
    end
  end

  def //(other : i32) : i32
    q = self.div(other)
    r = self % other
    if r < 0_i32
      if other > 0_i32
        q - 1_i32
      else
        q + 1_i32
      end
    else
      q
    end
  end

  def %%(other : i32) : i32
    result = self % other
    if result < 0_i32
      result + other.abs()
    else
      result
    end
  end

  def **(exponent : i32) : i32
    if exponent < 0_i32
      1_i32 // (self ** -exponent)
    else
      x = self
      result = 1_i32

      until exponent == 0_i32
        unless (exponent & 1_i32) == 0_i32
          result *= x
          exponent -= 1_i32
        end

        x *= x
        exponent >>= 1_i32
      end

      result
    end
  end

  #[primitive]
  def ==(other : i32) : bool
  end

  #[primitive]
  def !=(other : i32) : bool
  end

  #[primitive]
  def <(other : i32) : bool
  end

  #[primitive]
  def <=(other : i32) : bool
  end

  #[primitive]
  def >(other : i32) : bool
  end

  #[primitive]
  def >=(other : i32) : bool
  end

  def <=>(other : i32) : i32
    if self < other
      -1
    else
      if self > other
        1
      else
        0
      end
    end
  end

  ##[primitive]
  #def - : i32
  #end

  #def + : i32
  #  self
  #end

  #[primitive]
  def ~ : i32
  end

  def ! : bool
    false
  end

  #[primitive]
  def &(other : i32) : i32
  end

  #[primitive]
  def |(other : i32) : i32
  end

  #[primitive]
  def ^(other : i32) : i32
  end

  #[primitive]
  def <<(other : i32) : i32
  end

  #[primitive]
  def >>(other : i32) : i32
  end
end
